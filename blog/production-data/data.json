{
  "data": {
    "editorPosts": [
      {
        "id": "bab0de0e-1fc1-40fb-99eb-5722a34d07d4",
        "postId": "bab0de0e-1fc1-40fb-99eb-5722a34d07d4",
        "title": "Why the CDK enables Flow",
        "shortDescription": "Lorem Ipsum is simply dummy text of the printing",
        "longDescription": "Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing",
        "imageUrl": "https://bloginfrastructure-prod-imagebucket97210811-1mgqvezvs9c8h.s3-accelerate.amazonaws.com/2b172a5f-5dc2-45c2-b78c-7d02bc651c8e-wip.png",
        "body": "\n\nWhat is flow, why is it important\n\nAn example of where flow is slow\n- Creation & Update of Resources\n\nWhat is the CDK\n\nHow does the CDK solve the Above",
        "createdAt": "2021-09-11T22:18:00.341Z",
        "updatedAt": "2021-09-11T22:22:29.736Z",
        "publishStatus": "DRAFT",
        "__typename": "Post"
      },
      {
        "id": "d76acd55-de0f-48eb-b2c7-c4725e38799d",
        "postId": "d76acd55-de0f-48eb-b2c7-c4725e38799d",
        "title": "Why the CDK enables Flow",
        "shortDescription": "Lorem Ipsum is simply dummy text of the printing",
        "longDescription": "Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing",
        "imageUrl": "https://bloginfrastructure-prod-imagebucket97210811-1mgqvezvs9c8h.s3-accelerate.amazonaws.com/2b172a5f-5dc2-45c2-b78c-7d02bc651c8e-wip.png",
        "body": "",
        "createdAt": "2021-09-11T22:16:50.327Z",
        "updatedAt": null,
        "publishStatus": "DRAFT",
        "__typename": "Post"
      },
      {
        "id": "3e93d0ed-3e47-499c-9910-205fb8d07827",
        "postId": "3e93d0ed-3e47-499c-9910-205fb8d07827",
        "title": "Observability with Grafana",
        "shortDescription": "Lorem Ipsum is simply dummy text of the printing",
        "longDescription": "Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing",
        "imageUrl": "https://bloginfrastructure-prod-imagebucket97210811-1mgqvezvs9c8h.s3-accelerate.amazonaws.com/2b172a5f-5dc2-45c2-b78c-7d02bc651c8e-wip.png",
        "body": "**Graphana Talk**\n\nGrafana:\n\n- BYO data <-- how we can do this across multiple teams / a consistent experience\n- SLI / SLO w/ Grafana\n\nObservability vs. alerting:\n\n- \n\n\nMetrics:\n\n- New relic + Cloudwatch for metrics\n\nLogs:\n\n- Emit data from logs, can capture unique and bespoke information\n\nTraces:\n\n- APM Tracing, datadog on flow. New Relic on skills. You can see how people interact on the platform, such as user workflows through the system. This sounds like it is per session than say per request.\n- Most people are not doing tracing just yet\n\n\nAWS Spend:\n\n- Cost & Usage within AWS, did not work. 3rd party tools for cost & usage were too expensive\n- Track by, bounded context, environment, by team (not by service?) apparently it is by service\n- Store all cost & usage data within a PG database\n- Decided to use Graphana to display this information\n- Can contrast between bounded costs to individual teams\n- Kuber, RDS, etc. Roughly $2 per day\n- Tooling? Where do the tags exist\n- Changes in $ within the chart rather than absolute values\n- Infra cost within PR for Grafana\n\nSRE:\n\n- Pull vs. Push based systems (pull is better?)\n- Logs -> Metrics\n- Annotation for metrics, you can just use the logs instead\n- Messages between bounded contexts (within contexts?)\n- \n",
        "createdAt": "2021-07-21T20:10:30.962Z",
        "updatedAt": null,
        "publishStatus": "DRAFT",
        "__typename": "Post"
      },
      {
        "id": "a0d81e3e-d934-4950-b1fc-36c3a2532853",
        "postId": "a0d81e3e-d934-4950-b1fc-36c3a2532853",
        "title": "Strategic thinking",
        "shortDescription": "Lorem Ipsum is simply dummy text of the printing",
        "longDescription": "Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing",
        "imageUrl": "https://bloginfrastructure-prod-imagebucket97210811-1mgqvezvs9c8h.s3-accelerate.amazonaws.com/2b172a5f-5dc2-45c2-b78c-7d02bc651c8e-wip.png",
        "body": "Skills Coach\n\nThree skills:\n\n- Gap Analysis\n- 3 Lenses\n- Unintended consequences\n\nDay One:\n\n- This is structuring. Use Gap Analysis, which scaling questions. \n- Put where things are at on a scale of 1 to 10. Then think about what would move that one point up. \"How satisfied am I with the current state of the project, what would move it one point\".\n",
        "createdAt": "2021-06-21T16:02:38.427Z",
        "updatedAt": "2021-06-21T16:06:00.969Z",
        "publishStatus": "DRAFT",
        "__typename": "Post"
      },
      {
        "id": "9e96bacf-efe1-4aa4-9239-5f6b219deed1",
        "postId": "9e96bacf-efe1-4aa4-9239-5f6b219deed1",
        "title": "Approach to SRE",
        "shortDescription": "Lorem Ipsum is simply dummy text of the printing",
        "longDescription": "Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing",
        "imageUrl": "https://bloginfrastructure-prod-imagebucket97210811-1mgqvezvs9c8h.s3-accelerate.amazonaws.com/2b172a5f-5dc2-45c2-b78c-7d02bc651c8e-wip.png",
        "body": "https://blog-production-image-bucket.s3-accelerate.amazonaws.com/9a383205-453f-4255-8684-d674816904f6-Screen%20Shot%202021-06-15%20at%202.58.30%20pm.png",
        "createdAt": "2021-06-15T19:58:46.062Z",
        "updatedAt": "2021-06-15T19:59:13.658Z",
        "publishStatus": "DRAFT",
        "__typename": "Post"
      },
      {
        "id": "a3ba4819-dad3-4149-a1c6-29b7ce14b0b8",
        "postId": "a3ba4819-dad3-4149-a1c6-29b7ce14b0b8",
        "title": "Learnings from a High Growth Startup",
        "shortDescription": "Lorem Ipsum is simply dummy text of the printing",
        "longDescription": "Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing",
        "imageUrl": "https://bloginfrastructure-prod-imagebucket97210811-1mgqvezvs9c8h.s3-accelerate.amazonaws.com/2b172a5f-5dc2-45c2-b78c-7d02bc651c8e-wip.png",
        "body": "- Always deliver the smallest possible piece of product, businesses change all the time <-- may enable other features that become easier\n- Involve stakeholders in decision making, buy-in is important, and they are your advocates\n- Frame decisions around trade-offs. Best decisions are made this way\n- You are never going to come back to it, do it small, but properly\n- Data is important, though how much do people care about data\n- If you do the work yourself it might be faster though you will be the person who has to change it (unless it gets re-written)\n- Planning & prioritisation takes time. If you want more specific types of up-front planning it comes at the cost of speed\n- Teams owning work not individuals is great, though it comes with specific certain consequences\n- Assigning team ownership to services is important for (alerting, monitoring, clear division of who to go to, etc) \n- Paved roads allow others to move quickly (make doing the right thing easy) -- this can be applied for everything (documentation, readme, etc).\n- Copy + Paste, the package then service (services + packages are hard due to ownership problem). Evolving independently is important\n- Impacts of a 'product' culture vs. engineering culture\n- Phasing in terms of metrics is sometimes more important than actually tracking those metrics\n- Feature flagging is great\n- Trunk based development is great too\n- Accessible product metrics are important\n- Practices: Package > Automated documentation > Self-Service Documentation > Tribal Knowledge\n- Culture quickly conditions people\n- AWS accounts as cattle -- correctly automating things\n- Share nothing approach to AWS resources enables others to iterate, do not do it on the team level <-\n- Microservice boundaries are important (perhaps should have reporting layer too)\n- Value effort matrix (shifting over time) \n- What I think I have been wrong about (mono-repos, service-fan-out, not advocating for other teams' ownership)\n- Getting the right things correct up-front have lasting impacts on architecture and organisation (testing, CI/CD, database choice)\n- Capturing what you need to be aware of when making technical decisions is important (performance)\n- Incremental improvements (bias for actions), you aren't going to get it right now though doing something small and learning is good. Someone will eventually create a business / automate this problem away so no point over-engineering it\n- Service catalogues are great and help make decisions about how you should approach splitting work across teams\n- Leverage Prevailing Winds of others when solving a problem. Otherwise, others will not be interested (perhaps tackle the pain points when people experience this)\n- Start an experiment small, then expand out later\n- Technical debt and the ability to learn and grow\n- Keeping architecture simple and not using CQRS / Event sourcing\n- Not adopting enterprise architecture for managing code sooner\n- Keeping technologies similar for operational benefits. Using JavaScript across the stack was hugely beneficial \n- Leading from the front vs. behind. Feels like there is a strange mix.\n- Positivity goes a long way. Improves morale, it will get better.\n- Conway's law has the largest single impact on an organisation (teams, splitting the product correctly, competencies vs. roles vs. functions). Microservices at the right time \n- What should have been done on the AWS account sooner rather than later (tagging)\n- Hand-off between teams, creating services, etc.\n- Hard to triage incoming requests into the product manager\n- Data team (impacts of not being close to P&E early, culturally similar 4 years later)\n- Structuring microservices (the correct size) - (teams, splitting the product correctly, competencies vs. roles vs. functions) -- (Macroservices)\n- Test data\n- Spinning up microservices and service to service dependencies\n- Building vs Buying products\n- Single, vs. Team vs. Domain, vs Microservice\n- How we did microservices correctly, repeatable builds\n- Using SSM to store credentials / configuration for a Microservice (not centralized configuration)\n- OKRs, input & output metrics. Using confidence and fuzzy metrics that do not have actual numbers is okay too.\n- Rolling up metrics (SRE / DoRA) -- When rolling up the data consider rolling up Yes / No information rather than rolling up the raw metrics. Also in the case of SRE rolling up the difference between expected & actual is more important\n- Availability -> Relability -> Errors -> Latency for SRE\n\nFraming:\n- Tie improvements to Years/series'\n- How you would have changed what was done with what I know now",
        "createdAt": "2021-06-14T15:26:52.321Z",
        "updatedAt": "2021-06-15T19:25:12.748Z",
        "publishStatus": "DRAFT",
        "__typename": "Post"
      },
      {
        "id": "014023bc-6b0f-4fe9-84cd-ce6ae9434f96",
        "postId": "014023bc-6b0f-4fe9-84cd-ce6ae9434f96",
        "title": "Learnings from a High Growth Startup",
        "shortDescription": "Lorem Ipsum is simply dummy text of the printing",
        "longDescription": "Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing",
        "imageUrl": "https://bloginfrastructure-prod-imagebucket97210811-1mgqvezvs9c8h.s3-accelerate.amazonaws.com/2b172a5f-5dc2-45c2-b78c-7d02bc651c8e-wip.png",
        "body": "- Always deliver the smallest possible piece of product, businesses change all the time\n- Involve stakeholders in decision making, buy-in is important, and they are your advocates\n- Frame decisions around trade-offs. Best decisions are made this way\n- You are never going to come back to it, do it small, but properly\n- Data is important, though how much do people care about data\n- If you do the work yourself it might be faster though you will be the person who has to change it (unless it gets re-written)\n- Planning & prioritisation takes time. If you want more specific types of up-front planning it comes at the cost of speed\n- Teams owning work not individuals is great, though it comes with specific certain consequences\n- Assigning team ownership to services is important for (alerting, monitoring, clear division of who to go to, etc) \n- Paved roads allow others to move quickly (make doing the right thing easy)\n- Copy + Paste, the package then service (services + packages are hard due to ownership problem). Evolving independently is important\n- Impacts of a 'product' culture vs. engineering culture\n- Phasing in terms of metrics is sometimes more important than actually tracking those metrics\n- Feature flagging is great\n- Trunk based development is great too\n- Accessible product metrics are important\n- Practices: Package > Tribal Knowledge > Self-Service Documentation\n- Culture quickly conditions people\n- AWS accounts as cattle\n- Share nothing approach to AWS resources enables others to iterate\n- Microservice boundaries are important (perhaps should have reporting layer too)",
        "createdAt": "2021-06-14T15:26:21.959Z",
        "updatedAt": null,
        "publishStatus": "DRAFT",
        "__typename": "Post"
      },
      {
        "id": "75e9dc83-a474-425f-a4c9-231db97d4b08",
        "postId": "75e9dc83-a474-425f-a4c9-231db97d4b08",
        "title": "What does good infrastructure look like?",
        "shortDescription": "Lorem Ipsum is simply dummy text of the printing",
        "longDescription": "Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing",
        "imageUrl": "https://bloginfrastructure-prod-imagebucket97210811-1mgqvezvs9c8h.s3-accelerate.amazonaws.com/2b172a5f-5dc2-45c2-b78c-7d02bc651c8e-wip.png",
        "body": "# What does good infrastructure look like?\n\nThe intent of this post is to talk about infrastructure in the context of the single responsibility pattern. \n\nThis matters for 2 reasons:\n- Code that changes together stays together (makes change easy, makes deletion easy). Proper IaC via Cloudformation makes this easy, this is because deleting cloudformation stacks clean up all resources (AWS accounts too!)\n\nOther ideas:\n- Do not depend on global resources, which makes cleaning up much easier\n",
        "createdAt": "2021-03-05T19:20:11.696Z",
        "updatedAt": null,
        "publishStatus": "DRAFT",
        "__typename": "Post"
      },
      {
        "id": "7ccd6fc0-0295-4ee9-9623-42167f822418",
        "postId": "7ccd6fc0-0295-4ee9-9623-42167f822418",
        "title": "How we reduced Lambda cold starts at ACG",
        "shortDescription": "Lorem Ipsum is simply dummy text of the printing",
        "longDescription": "Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing",
        "imageUrl": "https://bloginfrastructure-prod-imagebucket97210811-1mgqvezvs9c8h.s3-accelerate.amazonaws.com/2b172a5f-5dc2-45c2-b78c-7d02bc651c8e-wip.png",
        "body": "https://acloudguru.com/blog/engineering/how-we-reduced-lambda-cold-starts-at-acg",
        "createdAt": "2021-01-24T07:19:30.067Z",
        "updatedAt": null,
        "publishStatus": "DRAFT",
        "__typename": "Post"
      },
      {
        "id": "dcec7e99-2cd6-45b4-8574-7e32a3d6633d",
        "postId": "dcec7e99-2cd6-45b4-8574-7e32a3d6633d",
        "title": "CREATED Title From DB / API Client",
        "shortDescription": "Lorem Ipsum is simply dummy text of the printing",
        "longDescription": "Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing",
        "imageUrl": "https://blog-dev-image-bucket.s3.amazonaws.com/lambda-logo.png",
        "body": "# Title \n Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing",
        "createdAt": "2020-10-11T03:53:16.298Z",
        "updatedAt": null,
        "publishStatus": "DRAFT",
        "__typename": "Post"
      },
      {
        "id": "4ec7974b-237e-454f-931a-d2174eb4394c",
        "postId": "4ec7974b-237e-454f-931a-d2174eb4394c",
        "title": "🦘 Serverless Days Sydney 2019 (Video)",
        "shortDescription": "A Cloud Guru's serverless microservice architecture",
        "longDescription": "This talk is a brief history and analysis of our original architecture, deployment strategy, service communication. I then contrast that history against our new ideas and approaches to building Serverless architectures.",
        "imageUrl": "https://blog-production-image-bucket.s3-accelerate.amazonaws.com/9cf0cd74-c94d-4c09-97eb-b3173db76a41-EE414874-08D6-4D67-858D-62C2120FD3F4.png",
        "body": "# Video\nA Cloud Guru has been a Serverless company from day one. Being a Serverless company does not necessarily mean that we started with all the patterns that would effectively allow us to scale out our development team. \n\nThis talk is a brief history and analysis of our original architecture, deployment strategy, service communication. I then contrast that history against our new ideas and approaches to building Serverless architectures.\n\n**NOTE:** these slides were missing from the video: [PowerPoint](https://blog-production-image-bucket.s3-accelerate.amazonaws.com/42b9ef36-ba8c-4f7f-bc32-c83695776de2-ServerlessDays.pptx)</span>\n\n<br />\n\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 56.25%;\">\n     <iframe src=\"https://www.youtube.com/embed/WDd2qfEwdzQ\" frameborder=\"0\" allowfullscreen style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\"></iframe>\n</div>\n",
        "createdAt": "2020-09-13T01:19:22.498Z",
        "updatedAt": "2020-09-13T11:26:18.637Z",
        "publishStatus": "PUBLISHED",
        "__typename": "Post"
      },
      {
        "id": "153c962c-1196-4249-a2e5-700885cc055c",
        "postId": "153c962c-1196-4249-a2e5-700885cc055c",
        "title": "🎙 Postcast with Yan Cui on A Cloud Guru's Serverless Journey",
        "shortDescription": "Discussion of the evolution and some of the challenges of being a completely serverless company",
        "longDescription": "A Cloud Guru is a company that started out Serverless from the start. In this podcast Yan Cui and I talk about, AppSync, GraphQL, Monorepos, scaling teams, microservice communication",
        "imageUrl": "https://blog-production-image-bucket.s3-accelerate.amazonaws.com/61162793-15d0-424d-b337-980ede205e58-FA895D32-D9CA-42EA-A8A4-90AA04A16D6D.png",
        "body": "# Podcast\n\nYou can find Yan Cui on twitter: [@theburningmonk](https://twitter.com/theburningmonk)\n\nLink to the postcast: [Postcast](https://www.buzzsprout.com/877747/5009156) \n\nA Cloud Guru is a company that started out Serverless from the start. In this podcast Yan Cui and I talk about:\n\n- AppSync\n- GraphQL\n- Monorepos & sharing packages\n- Scaling teams\n- Microservice communication\n- Thick clients\n- Firebase",
        "createdAt": "2020-09-13T01:17:17.872Z",
        "updatedAt": "2020-09-13T08:51:47.617Z",
        "publishStatus": "PUBLISHED",
        "__typename": "Post"
      },
      {
        "id": "d3fc9dc6-4484-49cd-815e-8e7ae2f878dd",
        "postId": "d3fc9dc6-4484-49cd-815e-8e7ae2f878dd",
        "title": "⚡ Serverless: What, how and why?",
        "shortDescription": "What is serverless computing?",
        "longDescription": "More people are beginning to see serverless as the future of software architecture. And why not? There is a significant amount of appeal in the idea of developing an application without having to worry about the servers.",
        "imageUrl": "https://blog-production-image-bucket.s3-accelerate.amazonaws.com/c1cffbfb-8c14-4a6e-b7fa-52c808a53bad-C47570E5-55A4-4F52-993A-386E0E7F0CF6.png",
        "body": "# Serverless: What, how and why?\n\nMore people are beginning to see serverless as the future of software architecture. And why not? There is a significant amount of appeal in the idea of developing an application without having to worry about the servers.\n\nThose of you who still have no idea what serverless is, or what it can do – don’t worry. Despite the hype, it’s still a growing trend, and there’s time to get into it via the many meetups and workshops that pop up in cities around the world.\n\nHere’s a basic guide I’ve put together to help answer some common questions about serverless.\n\n## What does serverless really mean?\n\nThe term “serverless” is a bit of a misnomer. Serverless isn’t 100% serverless, or even close. There are still servers, virtual machines, operating systems, containers, and runtimes, you just never have to manage them.\n\nWhen people refer to serverless computing casually, most of the time they are referring to Functions as a Service (FaaS), and a handful of other 3rd party services which provide either data persistence or data transformation features.\n\nThe FaaS part of serverless computing is built on top of all existing and conventional abstraction layers. In the case of AWS Lambda (the most widely known FaaS option), it goes like this:\n\n1. Physical hardware runs a virtual machine (EC2).\n2. The virtual machine then runs an operating system (such as Linux).\n3. The operating system runs a container (Firecracker). Containers are a way of standardising application packaging, making it easy to operate an application without dealing with ordinary incompatibility problems.\n4. The container runs a runtime, which then starts executing your code.\n\nDuring this process, a whole lot of other load-balancing and scaling magic happens in the Lambda control plane, but you never see or need to deal with those complexities.\n\n## But wait, what about cloud computing?\n\nYou might have heard of cloud computing spoken about alongside serverless. Cloud computing isn’t the same as serverless. It is the platform and abstraction in which serverless computing is achieved.\n\nCloud computing is a generic term describing an abstraction over remote physical hardware that is controlled through the use of software. The term cloud computing does not describe specifically how people manage, organise, and control those remote computing resources, or even specifically what they are or do.\n\nWhen people describe cloud computing, they typically refer to a common set of attributes that are easily and commonly architected for in-cloud native solutions. These include, but are not limited to:\n\n- On-demand resources\n- Pay for what is used\n- Elasticity\n- Economy of scale\n- Software-defined infrastructure\n\n## What are the benefits of serverless computing?\n\nServerless maximizes all the benefits of the cloud and makes attributes that are desirable in well-architected software systems super easy to achieve.\n\nThe benefits of serverless computing are the benefits of the cloud, just without having to deal with the typical architectural challenges of designing for them. These benefits include:\n\n- High availability\n- Scalability\n- No operational overhead for managing concerns below your layer\n- Serverless is immutable\n- Encouraged statelessness at the architectural and code level\n- Cloud-native service integrations\n- A completely code-defined environment\n",
        "createdAt": "2020-09-13T01:14:42.872Z",
        "updatedAt": "2020-09-13T08:54:57.935Z",
        "publishStatus": "PUBLISHED",
        "__typename": "Post"
      },
      {
        "id": "54fe0157-3017-4d2d-9ff8-9738f0b7ff44",
        "postId": "54fe0157-3017-4d2d-9ff8-9738f0b7ff44",
        "title": "💡 Ideas to improve my blog",
        "shortDescription": "Ideas to improve my blog",
        "longDescription": "Ideas to improve my blog",
        "imageUrl": "https://blog-production-image-bucket.s3-accelerate.amazonaws.com/dd11406a-642d-40cd-9621-ca81d17d31a4-1D6BB13A-25DC-49CE-ADBC-1234FEF03A2F.png",
        "body": "# Improvement ideas\n\nBugs:\n- [x] The new markdown component isn't showing up in the public view, so the a tags are still being rendered\n- [x] The -margin on the ul tags cause issues with rendering nested lists and having them under a header tag\n- [x] Unable to update posted page\n- [x] Reposting (unhiding a page) causes the post date to change\n- [ ] Grammarly appears to be broken on my body, cannot explain why (removing this from this page until it works might help)\n\nIdeas to improve functionality\n- [x] Make the publishes label appear on the list (with the blue)\n- [x] Public Links for proof reading (what about others being able to make changes?)\n- [ ] Integrate open graph per page (https://github.com/vercel/og-image, https://github.com/Compulsed/blog/blob/master/frontend/pages/_app.js)\n- [ ] Link to Google Analytics information about specific page within the edit view\n\nIdeas to improve stories:\n- [x] Update the Sydney one to be a copy of the oprah house\n- [ ] Serverless Conversation w/ Yan\n- [ ] For the serverless talk with Yan Cui, I can talk about how I was preparing for the interview\n- [ ] Maybe there are other people in the future who would want to do an interview in the future that might want tips\n- [ ] How Yan got in contact with me\n- [ ] Other things that we did not get to talk about\n\nLearning ideas outside of blog\n- [ ] Look at implementing cost allocation tags",
        "createdAt": "2020-09-13T01:05:05.055Z",
        "updatedAt": "2020-09-14T00:33:56.263Z",
        "publishStatus": "DRAFT",
        "__typename": "Post"
      },
      {
        "id": "2124f2c4-fb97-4deb-87ce-1cc2ba6179de",
        "postId": "2124f2c4-fb97-4deb-87ce-1cc2ba6179de",
        "title": "🚀 Scalability of Serverless with The Flexibility of SQL ",
        "shortDescription": "In the past, we have been been able to have our cake (Serverless) and be able to eat it too (SQL).",
        "longDescription": "Serverless is about quickly building solutions without spending time a lot of on building out & maintaining infrastructure. Traditionally purely serverless systems have had to be running against NoSQL databases like DynamoDB, Firebase, etc. This has changed since the release of Serverless Aurora.",
        "imageUrl": "https://blog-production-image-bucket.s3-accelerate.amazonaws.com/d37bbf70-7345-402a-98b1-cf4d44fab80e-9108CA58-BDCA-4272-8024-F6282B9B66C7.png",
        "body": "# Serverless + SQL ⚡\n \nSoftware developers want to build value, we want to solve problems, and we are always looking for the best way to do so.\n\nWe all love serverless systems because they are, **highly available**, **scalable**, **pay per use**, **low maintenance**, **able to integrate into other cloud-native services** and **extremely quick to build**. \n\nFor a long time, we have had to always make a trade-off at our data layer. We have had to pick between really slow ~7 second cold starts (which is just not acceptable for user-facing API requests), OR we have had to hack our relational data and put it into a document database like DynamoDB, S3 or Firebase.\n\nThis is what we gave up when transitioning to a document database:\n\n- Joins (data normalization)\n- Table constraints (uniqueness)\n- Transactions \n- Aggregate queries\n- Cascading deletes\n- Update each row with a new field\n\nMost of the above can be achieved with a document database though, they require you to:\n\n- Store aggregate data as a computed field\n- Write custom scripts which modify and reinsert records\n- Insert composite keys so that you can create additional indexes on them\n\nIf we think about why we choose serverless, it was so that we could remove undifferentiated heavy lifting, not reinventing the wheel. In this case, we would likely be doing it in such a way that **reduces code readability** and is **less reliable**.\n\n<img src=\"https://blog-production-image-bucket.s3-accelerate.amazonaws.com/27622116-4b6a-4268-b30b-3bc20b9a2da1-B3EDF750-CC52-4BCD-842C-F262C9FDD5D4.png\">\n\n# How we can have our cake and eat it too? 🍰\n\nAWS has listened to its customers and has introduced three different mechanisms to improve the way lambda can interact with an RDS. **Lambda ENI Improvements**, **RDS Proxy**, and the **Data API**.\n\n## ENI Improvements\n\n[Chris Munn's AWS Blog Post](https://aws.amazon.com/blogs/compute/announcing-improved-vpc-networking-for-aws-lambda-functions/), does an excellent job of explaining this issue, but I will try to summarise it for you:\n\nTo be able to understand the problem and the improvements that were made, we first have to know how the lambda containers are reused across invocations and how a lambda uses ENIs to connect into an RDS.\n\nWhen a lambda is invoked for the first time, it creates a container, the process of creating a container has a lot of different steps; at a high level, it downloads your lambda code from S3, runs any initialization logic. THEN it lambda start executing your `handle` function. The process of this initialization is referred to as a cold start; these containers are cached and used across different invocations. At any given time, a lambda handler can only be running on one container; as you are scaling up the number of concurrent requests, new containers will be created (more cold-starts). After some time, the lambda service will reduce the number of idle containers.\n\nFor a lambda function to access an RDS, the lambda container requires access to the VPC, which the database runs in. The way the lambda connects into the VPC is through attaching an ENI to every container that gets spun up. This means that the cold start of a new container is its normal startup time in addition to the ENI attachment duration of seven seconds. This cold start could be acceptable for async workloads, but if a user is waiting 7 seconds for an API response, this could feel like an eternity.\n\nThe improvements that AWS made here was by making it so that new containers could reuse the existing ENI; this reduces the cold starts as you are scaling up your lambda functions to deal with further requests. \n\nThe approach of having a shared ENI solves the latency issues though it does not solve **overwhelming that database with connections**. There are [ways](https://github.com/jeremydaly/serverless-mysql) that people have worked around this issue, though AWS has tried to solve this with the **RDSProxy service**.\n\n<img src=\"https://blog-production-image-bucket.s3-accelerate.amazonaws.com/9394a348-f457-47ea-8a47-48d060cdf5bf-D22B33D3-07E6-450A-B9E8-D8CB81725E35.png\">\n\n## RDS Proxy Service\n\nThis service attempts to solve the issue of too many database connections into your RDS (we still need the ENI improvements as this service still requires your lambda function to existing within the same VPC as your database). The way this service solves this connection issue is by having your lambda function connect into the RDS proxy service, and the RDS proxy service multiplexes those requests through a connection pool that the service manages. The RDS Proxy does take care of autoscaling EC2, but **you still have to pay for these instances even if they are mostly idle** - this is not very Serverless. To solve the cost challenge, **DataAPI** comes to the rescue. \n\n<img src=\"https://blog-production-image-bucket.s3-accelerate.amazonaws.com/d0ea1659-6b04-43cc-a110-4f522649a423-BB781761-507F-4E41-9C47-31E6E0115FDB.png\">\n\n## Data API\n\nThis service is similar to RDS proxy in that it multiplexes connections to your database, though it does it through HTTP.\n\nThis means that:\n\n- Lambda functions no longer have to be within a VPC (no cold starts) 🎉.\n- Data API is free (unlike the RDS proxy) 🎉\n\nAs far as I can tell, there are only two downsides to the Data API is slower per request compared to a direct connection / RDS Proxy and there can be some compatibility issues with ORMs and the Data API. As with all things from AWS they keep improving them and I expect that there will be further reductions in latency.\n\n<img src=\"https://blog-production-image-bucket.s3-accelerate.amazonaws.com/8c0dc22b-ffea-415f-a549-5934cc0df5c4-F9ADC909-3BE5-4353-864D-13323CC7FF44.png\">\n\n# How do I get started? ☁\n\nThere is a lot of work that goes into setting up a project which uses Aurora, Serverless and the Data API:\n\n- Cloudformation (Cluster / VPC setup / bastion host)\n- Serverless Offline Support\n- Environment / Configuration Management\n- Migration scripts\n\nAt the time of writing, there were not any starter projects that did exactly what I wanted them to do (Serverless Framework, JavaScript, Data API, Serverless Aurora, etc.), so I thought I would have a go at [writing one](https://github.com/Compulsed/serverless-aurora-graphql-starter).\n\nThis project uses a lot of already great packages from the open-source community and tries to bring them all into one place.\n\nThe project aims to (in-part or in-whole) be a drop in starter for your new project OR be a place where you can get some inspiration for how you might do Serverless SQL.\n\nSo, what are you waiting for? There has been a better time to create the next new Serverless startup. ⚡🚀\n\n<a href=\"https://github.com/Compulsed/serverless-aurora-graphql-starter\">\n   <img src=\"https://blog-production-image-bucket.s3-accelerate.amazonaws.com/19f5b847-03d1-4689-b216-fe4e5afa49a3-logo.png\">\n</a>\n\n---\n\nReferences:\n- [Data API Announcement](https://aws.amazon.com/blogs/aws/new-data-api-for-amazon-aurora-serverless/)\n- [RDS Proxy Announcement](https://aws.amazon.com/blogs/compute/using-amazon-rds-proxy-with-aws-lambda/ )\n- [ENI Improvements for Lambda Announcement](https://aws.amazon.com/blogs/compute/announcing-improved-vpc-networking-for-aws-lambda-functions/)\n- [Aurora Serverless: The Good, the Bad and the Scalable](https://www.jeremydaly.com/aurora-serverless-the-good-the-bad-and-the-scalable/)\n- [Data API Client](https://github.com/jeremydaly/data-api-client)",
        "createdAt": "2020-09-05T07:27:16.909Z",
        "updatedAt": "2021-09-11T21:42:11.275Z",
        "publishStatus": "DRAFT",
        "__typename": "Post"
      },
      {
        "id": "b26a33fd-1cbd-44c5-80f1-f926df1ca4d1",
        "postId": "b26a33fd-1cbd-44c5-80f1-f926df1ca4d1",
        "title": "🚩 Feature Flagging",
        "shortDescription": "Lorem Ipsum is simply dummy text of the printing",
        "longDescription": "Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing",
        "imageUrl": "https://bloginfrastructure-prod-imagebucket97210811-1mgqvezvs9c8h.s3-accelerate.amazonaws.com/2b172a5f-5dc2-45c2-b78c-7d02bc651c8e-wip.png",
        "body": "# Sub Lenaee\n\n## Flumina temptantes semianimes esse corpore\n\nLorem markdownum movet se somni. [Hunc](http://factaexpalluit.org/ventos.html)\nsacris, at ignara ausus! Silvani modo est, tinnitibus tempore meque. Greges est,\net arma regnum mortale, et suis, huic carmina arva. Servantis facere.\n\nIunonis Peneos. Ille deam harundine orbis. Mors cauda sed idque socero ungues\nfemur moderantur [meque](http://bovis-opem.net/vivebat): illi loca adhuc, iam?\n\n```\nvar of = portalRootkitWindows.baudDocking(kvmAd, pptp_frame);\nvar chipsetPack = multimedia(e_ebook - 20 - androidSnippet.circuitTftp(3));\nccCard.token_p = digital;\nsoap_gigabyte = text_memory.user(pipeline_icf, web.heat_rj(5 *\n        systray_toggle), sata_flops_boot + character);\n```\n\n\n![alt text](https://bloginfrastructure-prod-imagebucket97210811-1mgqvezvs9c8h.s3-accelerate.amazonaws.com/99779162-8819-4754-b45f-587784684e44-logo-4.png \"Logo Title From DB Text 1\")\n\nEbrius ostia non, nato [non durat](http://www.aiacem.net/tulisset) poenas\ntumebat cultum meritum homines premunt. Ardet hederis, viro, alas saepius,\nPriamus duratur. Quia sic choreas, suos: ceperunt vaticinor hoc et illi\naccipiunt. Tota resto amatas, secundo at cera qua humilem; quam [muneris\nfontis](http://mihi.io/) pessima generis umbras; Aeacus, perdere.\n\n## Frontis numina\n\nCapto **divulsere vertice pastor** numina Troiae Theseu Iuno et meo ergo\ncrescere tamen, hostiliter in guttura. Accipe mittunt piasque pectora; aevi\nPhoebe Palaemona videoque anum **sua quoque**.\n\n1. Ille praedae aristas iura\n2. Parte tamen\n3. Et atra Euagrus mitibus habenti Memnonides gravitate\n4. Habuit talibus venientem enim\n",
        "createdAt": "2020-09-03T07:17:45.561Z",
        "updatedAt": "2020-09-13T10:57:44.386Z",
        "publishStatus": "DRAFT",
        "__typename": "Post"
      },
      {
        "id": "a318d408-1a24-4ed0-afed-6ba8e205e2e6",
        "postId": "a318d408-1a24-4ed0-afed-6ba8e205e2e6",
        "title": "⚒ Monorepos",
        "shortDescription": "Lorem Ipsum is simply dummy text of the printing",
        "longDescription": "Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing",
        "imageUrl": "https://bloginfrastructure-prod-imagebucket97210811-1mgqvezvs9c8h.s3-accelerate.amazonaws.com/2b172a5f-5dc2-45c2-b78c-7d02bc651c8e-wip.png",
        "body": "# Sub Lenaee\n\n## Flumina temptantes semianimes esse corpore\n\nLorem markdownum movet se somni. [Hunc](http://factaexpalluit.org/ventos.html)\nsacris, at ignara ausus! Silvani modo est, tinnitibus tempore meque. Greges est,\net arma regnum mortale, et suis, huic carmina arva. Servantis facere.\n\nIunonis Peneos. Ille deam harundine orbis. Mors cauda sed idque socero ungues\nfemur moderantur [meque](http://bovis-opem.net/vivebat): illi loca adhuc, iam?\n\n```\nvar of = portalRootkitWindows.baudDocking(kvmAd, pptp_frame);\nvar chipsetPack = multimedia(e_ebook - 20 - androidSnippet.circuitTftp(3));\nccCard.token_p = digital;\nsoap_gigabyte = text_memory.user(pipeline_icf, web.heat_rj(5 *\n        systray_toggle), sata_flops_boot + character);\n```\n\n\n![alt text](https://bloginfrastructure-prod-imagebucket97210811-1mgqvezvs9c8h.s3-accelerate.amazonaws.com/99779162-8819-4754-b45f-587784684e44-logo-4.png \"Logo Title From DB Text 1\")\n\nEbrius ostia non, nato [non durat](http://www.aiacem.net/tulisset) poenas\ntumebat cultum meritum homines premunt. Ardet hederis, viro, alas saepius,\nPriamus duratur. Quia sic choreas, suos: ceperunt vaticinor hoc et illi\naccipiunt. Tota resto amatas, secundo at cera qua humilem; quam [muneris\nfontis](http://mihi.io/) pessima generis umbras; Aeacus, perdere.\n\n## Frontis numina\n\nCapto **divulsere vertice pastor** numina Troiae Theseu Iuno et meo ergo\ncrescere tamen, hostiliter in guttura. Accipe mittunt piasque pectora; aevi\nPhoebe Palaemona videoque anum **sua quoque**.\n\n1. Ille praedae aristas iura\n2. Parte tamen\n3. Et atra Euagrus mitibus habenti Memnonides gravitate\n4. Habuit talibus venientem enim\n",
        "createdAt": "2020-09-03T07:17:31.11Z",
        "updatedAt": "2020-09-13T10:56:03.556Z",
        "publishStatus": "DRAFT",
        "__typename": "Post"
      },
      {
        "id": "dbd78ef7-4b00-4a56-8331-06bcc44d6cf7",
        "postId": "dbd78ef7-4b00-4a56-8331-06bcc44d6cf7",
        "title": "Serverless SQL",
        "shortDescription": "Lorem Ipsum is simply dummy text of the printing",
        "longDescription": "Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing",
        "imageUrl": "https://bloginfrastructure-prod-imagebucket97210811-1mgqvezvs9c8h.s3-accelerate.amazonaws.com/2b172a5f-5dc2-45c2-b78c-7d02bc651c8e-wip.png",
        "body": "# Serverless SQL\n\nStory:\n\n- Before SQL (ENI Cold starts async only)\n- Recent changes\n- What is right for you\n\nTopics:\n\n- What is Serverless Aurora\n- RDS Proxy vs. HTTP API (RDSDataService), vs. ENI Changes\n- Performance\n- Cost ($)\n- What service is right for what scenarios",
        "createdAt": "2020-09-02T08:09:22.248Z",
        "updatedAt": "2020-09-03T07:22:07.431Z",
        "publishStatus": "HIDDEN",
        "__typename": "Post"
      },
      {
        "id": "cddb1a56-2763-4887-897f-2c5c7c697a07",
        "postId": "cddb1a56-2763-4887-897f-2c5c7c697a07",
        "title": "Serverless Aurora with Serverless Framework",
        "shortDescription": "Lorem Ipsum is simply dummy text of the printing",
        "longDescription": "Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing",
        "imageUrl": "https://bloginfrastructure-prod-imagebucket97210811-1mgqvezvs9c8h.s3-accelerate.amazonaws.com/2b172a5f-5dc2-45c2-b78c-7d02bc651c8e-wip.png",
        "body": "# Sub Lenaee\n\n## Flumina temptantes semianimes esse corpore\n\nLorem markdownum movet se somni. [Hunc](http://factaexpalluit.org/ventos.html)\nsacris, at ignara ausus! Silvani modo est, tinnitibus tempore meque. Greges est,\net arma regnum mortale, et suis, huic carmina arva. Servantis facere.\n\nIunonis Peneos. Ille deam harundine orbis. Mors cauda sed idque socero ungues\nfemur moderantur [meque](http://bovis-opem.net/vivebat): illi loca adhuc, iam?\n\n```\nvar of = portalRootkitWindows.baudDocking(kvmAd, pptp_frame);\nvar chipsetPack = multimedia(e_ebook - 20 - androidSnippet.circuitTftp(3));\nccCard.token_p = digital;\nsoap_gigabyte = text_memory.user(pipeline_icf, web.heat_rj(5 *\n        systray_toggle), sata_flops_boot + character);\n```\n\n\n![alt text](https://blog-production-image-bucket.s3-accelerate.amazonaws.com/lambda-logo.png \"Logo Title From DB Text 1\")\n\nEbrius ostia non, nato [non durat](http://www.aiacem.net/tulisset) poenas\ntumebat cultum meritum homines premunt. Ardet hederis, viro, alas saepius,\nPriamus duratur. Quia sic choreas, suos: ceperunt vaticinor hoc et illi\naccipiunt. Tota resto amatas, secundo at cera qua humilem; quam [muneris\nfontis](http://mihi.io/) pessima generis umbras; Aeacus, perdere.\n\n## Frontis numina\n\nCapto **divulsere vertice pastor** numina Troiae Theseu Iuno et meo ergo\ncrescere tamen, hostiliter in guttura. Accipe mittunt piasque pectora; aevi\nPhoebe Palaemona videoque anum **sua quoque**.\n\n1. Ille praedae aristas iura\n2. Parte tamen\n3. Et atra Euagrus mitibus habenti Memnonides gravitate\n4. Habuit talibus venientem enim\n",
        "createdAt": "2020-09-01T23:40:11.927Z",
        "updatedAt": "2020-09-03T07:21:58.866Z",
        "publishStatus": "DRAFT",
        "__typename": "Post"
      },
      {
        "id": "23d04c4d-024c-4396-8c0c-1322eab7f1d4",
        "postId": "23d04c4d-024c-4396-8c0c-1322eab7f1d4",
        "title": "📐 Measuring Serverless Latency",
        "shortDescription": "Lorem Ipsum is simply dummy text of the printing",
        "longDescription": "Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing",
        "imageUrl": "https://bloginfrastructure-prod-imagebucket97210811-1mgqvezvs9c8h.s3-accelerate.amazonaws.com/2b172a5f-5dc2-45c2-b78c-7d02bc651c8e-wip.png",
        "body": "# Sub Lenaee\n\n## Flumina temptantes semianimes esse corpore\n\nLorem markdownum movet se somni. [Hunc](http://factaexpalluit.org/ventos.html)\nsacris, at ignara ausus! Silvani modo est, tinnitibus tempore meque. Greges est,\net arma regnum mortale, et suis, huic carmina arva. Servantis facere.\n\nIunonis Peneos. Ille deam harundine orbis. Mors cauda sed idque socero ungues\nfemur moderantur [meque](http://bovis-opem.net/vivebat): illi loca adhuc, iam?\n\n```\nvar of = portalRootkitWindows.baudDocking(kvmAd, pptp_frame);\nvar chipsetPack = multimedia(e_ebook - 20 - androidSnippet.circuitTftp(3));\nccCard.token_p = digital;\nsoap_gigabyte = text_memory.user(pipeline_icf, web.heat_rj(5 *\n        systray_toggle), sata_flops_boot + character);\n```\n\n\n![alt text](https://blog-production-image-bucket.s3-accelerate.amazonaws.com/lambda-logo.png \"Logo Title From DB Text 1\")\n\nEbrius ostia non, nato [non durat](http://www.aiacem.net/tulisset) poenas\ntumebat cultum meritum homines premunt. Ardet hederis, viro, alas saepius,\nPriamus duratur. Quia sic choreas, suos: ceperunt vaticinor hoc et illi\naccipiunt. Tota resto amatas, secundo at cera qua humilem; quam [muneris\nfontis](http://mihi.io/) pessima generis umbras; Aeacus, perdere.\n\n## Frontis numina\n\nCapto **divulsere vertice pastor** numina Troiae Theseu Iuno et meo ergo\ncrescere tamen, hostiliter in guttura. Accipe mittunt piasque pectora; aevi\nPhoebe Palaemona videoque anum **sua quoque**.\n\n1. Ille praedae aristas iura\n2. Parte tamen\n3. Et atra Euagrus mitibus habenti Memnonides gravitate\n4. Habuit talibus venientem enim\n",
        "createdAt": "2020-09-01T22:50:44.893Z",
        "updatedAt": "2020-09-13T10:56:20.816Z",
        "publishStatus": "DRAFT",
        "__typename": "Post"
      },
      {
        "id": "f10cdf2b-c5ec-42cc-8386-a86d70c62ca4",
        "postId": "f10cdf2b-c5ec-42cc-8386-a86d70c62ca4",
        "title": "🙌 Incremental Delivery",
        "shortDescription": "Lorem Ipsum is simply dummy text of the printing",
        "longDescription": "Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing",
        "imageUrl": "https://bloginfrastructure-prod-imagebucket97210811-1mgqvezvs9c8h.s3-accelerate.amazonaws.com/2b172a5f-5dc2-45c2-b78c-7d02bc651c8e-wip.png",
        "body": "# Sub Lenaee\n\n## Flumina temptantes semianimes esse corpore\n\nLorem markdownum movet se somni. [Hunc](http://factaexpalluit.org/ventos.html)\nsacris, at ignara ausus! Silvani modo est, tinnitibus tempore meque. Greges est,\net arma regnum mortale, et suis, huic carmina arva. Servantis facere.\n\nIunonis Peneos. Ille deam harundine orbis. Mors cauda sed idque socero ungues\nfemur moderantur [meque](http://bovis-opem.net/vivebat): illi loca adhuc, iam?\n\n&nbsp;\n&nbsp;\n&nbsp;\n\n```js\nvar of = portalRootkitWindows.baudDocking(kvmAd, pptp_frame);\nvar chipsetPack = multimedia(e_ebook - 20 - androidSnippet.circuitTftp(3));\nccCard.token_p = digital;\n\nsoap_gigabyte = text_memory.user(pipeline_icf, web.heat_rj(5 * systray_toggle), sata_flops_boot + character);\n```\n\n<p style=\"text-align:center;\"><b>Some code examples</b></p>\n\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n\n<p style=\"text-align:center;\"><b>This is a really cool image of something I think</b></p>\n\n&nbsp;\n&nbsp;\n&nbsp;\n\n\nEbrius ostia non, nato [non durat](http://www.aiacem.net/tulisset) poenas\ntumebat cultum meritum homines premunt. Ardet hederis, viro, alas saepius,\nPriamus duratur. Quia sic choreas, suos: ceperunt vaticinor hoc et illi\naccipiunt. Tota resto amatas, secundo at cera qua humilem; quam [muneris\nfontis](http://mihi.io/) pessima generis umbras; Aeacus, perdere.\n\n## Frontis numina\n\nCapto **divulsere vertice pastor** numina Troiae Theseu Iuno et meo ergo\ncrescere tamen, hostiliter in guttura. Accipe mittunt piasque pectora; aevi\nPhoebe Palaemona videoque anum **sua quoque**.\n\n1. Ille praedae aristas iura\n2. Parte tamen\n3. Et atra Euagrus mitibus habenti Memnonides gravitate\n4. Habuit talibus venientem enim\n",
        "createdAt": "2020-09-01T22:48:17.546Z",
        "updatedAt": "2020-09-13T10:57:20.291Z",
        "publishStatus": "DRAFT",
        "__typename": "Post"
      },
      {
        "id": "bb647f02-5a91-420f-bb29-c74a80946544",
        "postId": "bb647f02-5a91-420f-bb29-c74a80946544",
        "title": "🧔 Why leading by example is important",
        "shortDescription": "Lorem Ipsum is simply dummy text of the printing",
        "longDescription": "Lorem Ipsum is simply dummy text of the printing Lorem Ipsum is simply dummy text of the printing",
        "imageUrl": "https://bloginfrastructure-prod-imagebucket97210811-1mgqvezvs9c8h.s3-accelerate.amazonaws.com/2b172a5f-5dc2-45c2-b78c-7d02bc651c8e-wip.png",
        "body": "# Sub Lenaee\n\n## Flumina temptantes semianimes esse corpore\n\nLorem markdownum movet se somni. [Hunc](http://factaexpalluit.org/ventos.html)\nsacris, at ignara ausus! Silvani modo est, tinnitibus tempore meque. Greges est,\net arma regnum mortale, et suis, huic carmina arva. Servantis facere.\n\nIunonis Peneos. Ille deam harundine orbis. Mors cauda sed idque socero ungues\nfemur moderantur [meque](http://bovis-opem.net/vivebat): illi loca adhuc, iam?\n\n```\nvar of = portalRootkitWindows.baudDocking(kvmAd, pptp_frame);\nvar chipsetPack = multimedia(e_ebook - 20 - androidSnippet.circuitTftp(3));\nccCard.token_p = digital;\nsoap_gigabyte = text_memory.user(pipeline_icf, web.heat_rj(5 *\n        systray_toggle), sata_flops_boot + character);\n```\n\n\n![alt text](https://blog-production-image-bucket.s3-accelerate.amazonaws.com/lambda-logo.png \"Logo Title From DB Text 1\")\n\nEbrius ostia non, nato [non durat](http://www.aiacem.net/tulisset) poenas\ntumebat cultum meritum homines premunt. Ardet hederis, viro, alas saepius,\nPriamus duratur. Quia sic choreas, suos: ceperunt vaticinor hoc et illi\naccipiunt. Tota resto amatas, secundo at cera qua humilem; quam [muneris\nfontis](http://mihi.io/) pessima generis umbras; Aeacus, perdere.\n\n## Frontis numina\n\nCapto **divulsere vertice pastor** numina Troiae Theseu Iuno et meo ergo\ncrescere tamen, hostiliter in guttura. Accipe mittunt piasque pectora; aevi\nPhoebe Palaemona videoque anum **sua quoque**.\n\n1. Ille praedae aristas iura\n2. Parte tamen\n3. Et atra Euagrus mitibus habenti Memnonides gravitate\n4. Habuit talibus venientem enim\n",
        "createdAt": "2020-09-01T10:53:28.886Z",
        "updatedAt": "2020-09-13T10:56:47.221Z",
        "publishStatus": "HIDDEN",
        "__typename": "Post"
      }
    ]
  }
}
